---
format: 
  html:
    toc: true
    toc-depth: 3
    embed-resources: true
editor_options: 
  chunk_output_type: console
params:
  depl_file: depl_file
---

```{r, set-up, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, dpi = 600, fig.width = 8)

library(data.table)
library(dplyr)
library(DT)
library(knitr)
library(googlesheets4)
library(here)
library(lubridate)
library(stringr)
library(tidyr)
library(waves)

source(here("functions/subchunkify.R"))

#depl_file <- "R:/data_branches/wave/raw_data/2024-06-03_process/data/2010.10.29 - Jordan Bay - Waves.txt"
depl_file <- params$depl_file

dt_options1 <- list(
      dom = 'ft',
      paging = FALSE,
      searching = TRUE,
      pageLength = 500,
      columnDefs = list(list(className = 'dt-center', targets = "_all"))
)

dt_options2 <- list(
      dom = 'Bft',
      paging = FALSE,
      searching = TRUE,
      pageLength = 500,
      scrollY = "500px",
      scrollX = "500px",
      columnDefs = list(list(className = 'dt-center', targets = "_all")),
      buttons = c('copy', 'csv')
)

# ADCP TRACKING
link <- "https://docs.google.com/spreadsheets/d/1DVfJbraoWL-BW8-Aiypz8GZh1sDS6-HtYCSrnOSW07U/edit#gid=0"

gs4_deauth()
adcp_tracking <- googlesheets4::read_sheet(
  link, sheet = "Wave Tracking", range = "A:F"
) 

# extract deployment info from the file name
depl_info <- wv_extract_deployment_info(depl_file)

depl_tracking <- adcp_tracking %>%
  filter(depl_date == depl_info$depl_date, station == depl_info$station)

depl_id <- depl_tracking$depl_id
county <- depl_tracking$county
waterbody <- depl_tracking$waterbody
station <- depl_tracking$station
depl_date <- depl_tracking$depl_date

# path to data export
path_export <- file.path("R:/data_branches/wave/processed_data/deployment_data")

file_name <- str_replace(
  paste(
    depl_info$depl_date, 
    depl_info$station, 
    depl_tracking$depl_id, sep = "_"
  ), " ", "_")
```

```{r, format-data}
#| message: false

# wave params only reocrded every 3 hours during these deployments
if (depl_id %in% c("DG013", "DG014")) {
  max_interval_hours <- 6
} else max_interval_hours <- 4

# wave params only recorded every 3 hours during these deployments
if (county == "Digby") {
  depth_threshold <- 2
} else depth_threshold <- 1

# format & flag data
# ***assign flag of 4 to all of pictou depl??
depl_dat <- depl_file %>%
  wv_read_txt() %>%
  wv_assign_cf_variable_names() %>%
  wv_assign_short_variable_names() %>% 
  wv_add_opendata_cols(metadata = depl_tracking) %>% 
  wv_test_all(county = county, max_interval_hours = max_interval_hours) %>%
  wv_assign_max_flag() %>% 
  wv_append_long_variable_names() %>% 
  wv_start_end_obs_to_trim(depth_threshold = depth_threshold) 

if(depl_id == "QN005") {
  depl_dat <- depl_dat %>% 
    mutate(
      trim_obs = if_else(row_number() == 1, ordered(4, levels = 1:4), trim_obs)
    )
}

# summarise flags
qc_summary <- depl_dat %>% 
  # pivot function doesn't work with long var names!!
  wv_assign_short_variable_names() %>% 
  wv_pivot_flags_longer() %>% 
  wv_summarise_flags() %>% 
  mutate(
    deployment_id = depl_id,
    county = county, 
    station = station, 
    deployment_date = depl_date
  ) %>% 
  select(deployment_id, county, station, deployment_date, everything()) %>% 
  arrange(qc_test, variable)

depl_out <- depl_dat %>% 
  filter(trim_obs != 4)

qc_tests <- c("grossrange", "rolling_sd", "spike", "qc")

#################################################################
#### EXPORT ####################################################

saveRDS(
  depl_out, 
  paste0(paste(path_export, county, "new", file_name, sep = "/"), ".rds")
)

fwrite(
  qc_summary,
  paste(path_export, "qc_flag_summary.csv", sep = "/"),
  append = TRUE
)

###############################################################
###############################################################

```

# `r depl_id`: `r station` (`r format(depl_date)`)

`r Sys.Date()`

# QC Summary

```{r}
qc_summary %>% 
  select(-c(deployment_id, county, station, deployment_date)) %>% 
  mutate(variable = str_remove(variable, "sea_surface_wave_")) %>% 
  datatable(options = dt_options2, rownames = FALSE, extensions = 'Buttons')
```

# QC Figures

## Sensor Depth

```{r}
#| fig-height: 3
p <- wv_plot_depth_flags(depl_dat)

p
```

```{r}
#| results: asis

dat <- depl_out %>% 
  wv_assign_short_variable_names() %>% 
  wv_pivot_flags_longer()

var_pairs <- list(
  c("significant_height_m", "peak_period_s", "to_direction_degree"),
  c("sea_water_speed_m_s", "sea_water_to_direction_degree"),
  c("sensor_depth_below_surface_m", NA),
  c("average_height_largest_33_percent_m", "period_largest_33_percent_s"),
  c("average_height_largest_10_percent_m", "period_largest_10_percent_s"),
  c("maximum_height_m", "period_maximum_s")
)

for(i in seq_along(var_pairs)) {
  
  vars_i <- na.omit(var_pairs[[i]])
  n_vars <- length(vars_i)
  
  if(n_vars == 1) h <- 2.75
  if(n_vars > 1) h <- 2.75 * n_vars
  
  cat(paste("## ", paste(vars_i, collapse =  " & "), "\n \n"))
  
  for(j in seq_along(qc_tests)) {
    
    test_j <- qc_tests[j]
    
    if(test_j == "qc") {
      cat('\n### summary flags \n')
    } else cat('\n###', test_j, '\n')
    
    dat_j <- dat %>% 
      filter(variable %in% vars_i) 
    
    p_j <- wv_plot_flags(
      dat_j, qc_tests = test_j, n_col = 1, flag_title = FALSE
    )
    
    subchunkify(p_j[[1]], fig_height = h, fig_width = 8.5)
    
    cat("\n\n")
  }
}


```


